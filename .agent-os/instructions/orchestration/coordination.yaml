# Agent OS + PocketFlow Coordination Configuration
coordination_map:
  plan-product:
    triggers_orchestrator: true
    orchestrator_scope: "full_product_planning"
    outputs: [".agent-os/product/", ".agent-os/workflows/"]
    next_files: ["create-spec"]
    
  create-spec:
    depends_on: ["plan-product"]
    checks_for_orchestrator: true
    fallback_to_orchestrator: true
    coordination_points:
      - step_4_5: "design_document_creation"
      - step_12: "task_decomposition"
    outputs: [".agent-os/specs/", ".agent-os/workflows/[feature].py"]
    next_files: ["execute-tasks"]
    
  execute-tasks:
    depends_on: ["create-spec"]
    requires_orchestrator_plan: true
    delegates_to: ["execute-task"]
    coordination_method: "task_loop"
    validation_gates:
      - "orchestrated_workflow_exists"
      - "design_document_complete"
      - "pydantic_models_defined"
    blocks_without: ["workflow_implementation"]
    
  execute-task:
    invoked_by: ["execute-tasks", "direct_user_command"]
    execution_modes: ["orchestrated", "direct"]
    handles: ["individual_task_implementation"]
    uses_shared_resources: ["execution_utils"]
    validation_gates:
      - "task_context_valid"
      - "design_document_adherence" 
    quality_enforcement:
      - "pocketflow_phases_followed"
      - "type_safety_maintained"
      - "tdd_approach_applied"

  # NEW AGENTS - Added for sub-agent implementation

  template-validator:
    triggers_on: ["template_generation_complete", "generator_completed"]
    validates: ["structural_integrity", "pattern_compliance", "educational_placeholders"]
    outputs: ["validation_reports", "structural_corrections"]
    coordination_method: "post_generation_validation"
    validation_gates:
      - "python_syntax_valid"
      - "pocketflow_patterns_correct"
      - "pydantic_models_structured"
      - "placeholder_quality_maintained"
    quality_enforcement:
      - "framework_vs_usage_distinction"
      - "todo_stubs_educational"

  pattern-recognizer:
    triggers_on: ["requirements_analysis", "spec_creation", "pattern_identification"]
    analyzes: ["user_requirements", "pattern_indicators", "complexity_assessment"]
    outputs: ["pattern_recommendations", "template_selections", "workflow_structures"]
    coordination_method: "requirements_driven_analysis"
    integrates_with: ["pocketflow-orchestrator"]
    validation_gates:
      - "pattern_confidence_threshold"
      - "requirement_coverage_complete"
    quality_enforcement:
      - "pattern_selection_rationale"
      - "template_customization_appropriate"

  dependency-orchestrator:
    triggers_on: ["pattern_selected", "template_generated", "environment_setup"]
    configures: ["python_environment", "development_tools", "dependency_specs"]
    outputs: ["pyproject_templates", "tool_configs", "environment_specifications"]
    coordination_method: "pattern_based_configuration"
    depends_on: ["pattern-recognizer"]
    validation_gates:
      - "dependency_compatibility_verified"
      - "tool_configuration_valid"
      - "environment_reproducible"
    quality_enforcement:
      - "framework_dependency_separation"
      - "pattern_specific_requirements"

hooks:
  design_document_validation:
    file: "orchestration/orchestrator-hooks.md"
    section: "validate_design_document"
    required_for: ["create-spec", "execute-tasks"]
    
  validate_orchestrated_plan:
    file: "orchestration/orchestrator-hooks.md"
    section: "validate_workflow_implementation"  
    required_for: ["execute-tasks"]
    
  validate_task_execution:
    file: "orchestration/orchestrator-hooks.md"
    section: "validate_individual_task_completion"
    required_for: ["execute-task"]

  # NEW HOOKS for sub-agents

  sub_agent_coordination:
    file: "orchestration/sub-agent-coordination.md"
    section: "coordinate_template_validation"
    required_for: ["template-validator"]

  pattern_analysis_validation:
    file: "orchestration/sub-agent-coordination.md" 
    section: "validate_pattern_analysis"
    required_for: ["pattern-recognizer"]

  dependency_config_validation:
    file: "orchestration/sub-agent-coordination.md"
    section: "validate_dependency_configuration"
    required_for: ["dependency-orchestrator"]
