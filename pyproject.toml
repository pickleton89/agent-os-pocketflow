[build-system]
requires = ["setuptools>=45", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "agent-os-pocketflow"
version = "2.0.0"
description = "Agent OS + PocketFlow Framework - Meta-system for generating PocketFlow workflow templates"
readme = "README.md"
requires-python = ">=3.12"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Framework :: FastAPI",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Build Tools",
    "Operating System :: OS Independent",
    "Natural Language :: English",
]
dependencies = [
    "click>=8.3.0",
    "pyyaml>=6.0.2",
    "rich>=14.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.0.0",
    "coverage[toml]>=7.6.0",
    "ruff>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/pickleton89/agent-os-pocketflow"
Repository = "https://github.com/pickleton89/agent-os-pocketflow.git"
Documentation = "https://buildermethods.com/agent-os"
Changelog = "https://github.com/pickleton89/agent-os-pocketflow/blob/main/CHANGELOG.md"

[project.scripts]
agent-os = "pocketflow_tools.installer_cli:main"
pocketflow-generate = "pocketflow_tools.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["pocketflow_tools*"]
exclude = ["setup*", "shared*", "templates*", "standards*", "instructions*", "framework-tools*"]

[tool.setuptools.package-data]
"pocketflow_tools" = [
    "data/**/*",
]

[tool.coverage.run]
source = ["pocketflow_tools", "framework-tools"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "templates/*",
    "*/antipattern_demo.py",  # Educational demo with intentional errors
    ".venv/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "@abstractmethod",
    "@abc.abstractmethod",
    "if __name__ == .__main__.:",
]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"
