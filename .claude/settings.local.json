{
  "permissions": {
    "allow": [
      "Bash(uv run ruff:*)",
      "mcp__graphiti__add_memory",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(find:*)",
      "Bash(uv pip install:*)",
      "Bash(./setup/base.sh:*)",
      "Read(/Users/jeffkiefer/.agent-os/framework-tools/**)",
      "Read(/Users/jeffkiefer/.agent-os/setup/**)",
      "Read(/Users/jeffkiefer/.agent-os/setup/**)",
      "Read(/Users/jeffkiefer/.agent-os/framework-tools/**)",
      "Bash(grep:*)",
      "Bash(python3:*)",
      "mcp__claude-context__search_code",
      "Bash(chmod:*)",
      "Bash(python test:*)",
      "Bash(python:*)",
      "Bash(git restore:*)",
      "Bash(uv run:*)",
      "Bash(./test-ci-workflow.sh:*)",
      "Bash(git checkout:*)",
      "mcp__graphiti__search_memory_facts",
      "mcp__claude-context__index_codebase",
      "Bash(./scripts/run-all-tests.sh:*)",
      "Bash(git rm:*)",
      "Bash(bash:*)",
      "Bash(./run.sh:*)",
      "Bash(.agent-os/framework-tools/run.sh check-pocketflow-install:*)",
      "Bash(.agent-os/framework-tools/run.sh:*)",
      "Read(//private/tmp/test-pocketflow-install/**)",
      "Bash(tree:*)",
      "Bash(.agent-os/bin/analyze-pattern:*)",
      "Bash(.agent-os/bin/generate-deps:*)",
      "Bash(.agent-os/bin/pattern-info:*)",
      "Bash(./scripts/validation/test_pocketflow_integration.sh:*)",
      "Bash(curl:*)",
      "Read(//Users/jeffkiefer/Documents/projects/testing_project/.agent-os/**)",
      "Read(//Users/jeffkiefer/Documents/projects/testing_project/**)",
      "Read(//Users/jeffkiefer/.agent-os/setup/**)",
      "Read(//Users/jeffkiefer/.agent-os/commands/**)",
      "Bash(git stash:*)",
      "Bash(git push:*)",
      "Read(//Users/jeffkiefer/.agent-os/claude-code/**)",
      "Bash(/Users/jeffkiefer/Documents/projects/agent-os-pocketflow/setup/project.sh:*)",
      "Bash(xmllint:*)",
      "Bash(sed:*)",
      "Read(//Users/jeffkiefer/.agent-os/**)",
      "Bash(xargs git ls-files)",
      "mcp__graphiti__search_memory_nodes",
      "WebSearch",
      "Bash(xargs sed:*)",
      "Bash(setup/base.sh:*)",
      "Bash(/dev/null)",
      "Read(//Users/jeffkiefer/.claude/agents/**)",
      "Bash(claude --agent tech-stack-document-creator --input \"Project: AI-powered content management system\nprogramming_language: Python 3.12\ndatabase_system: PostgreSQL  \nfrontend_framework: Next.js\napplication_hosting: Railway\nllm_providers: [\"\"OpenAI\"\", \"\"Anthropic\"\"]\n\nPlease create a tech-stack.md document for this AI-powered content management system project with the specified technologies and modern Python defaults.\")",
      "Bash(echo:*)",
      "Bash(uv pip:*)",
      "Bash(.agent-os/framework-tools/check-pocketflow-install.py)",
      "Read(//Users/jeffkiefer/.claude/commands/**)",
      "mcp__graphiti__get_episodes",
      "WebFetch(domain:callmephilip.com)",
      "WebFetch(domain:docs.claude.com)",
      "Bash(./.agent-os/validation/test_pocketflow_integration.sh)",
      "Bash(git -C /Users/jeffkiefer/Documents/projects/agent-os-pocketflow status)",
      "Read(//Users/jeffkiefer/Documents/projects/**)",
      "Bash(cat:*)",
      "Bash(awk:*)",
      "Bash(while read f)",
      "Bash(do echo \"$f:\")",
      "Bash(done)",
      "Bash(for file in ./claude-code/testing/test-phase4-optimization.py ./framework-tools/test_smart_features.py ./framework-tools/simple_pattern_test.py ./.agent-os/workflows/cli-smoke/customeragent/tests/test_nodes.py ./.agent-os/workflows/cli-smoke/customeragent/tests/test_flow.py ./.agent-os/workflows/cli-smoke/customeragent/tests/test_api.py ./pocketflow_tools/generators/test_generators.py)",
      "Bash(do echo \"$file:\")",
      "Read(//private/tmp/**)",
      "Bash(mkdir:*)",
      "Bash(MIN_COVERAGE=0 GENERATE_HTML=false ./scripts/measure-coverage.sh)",
      "Bash(command -v:*)",
      "Bash(for file in ./framework-tools/test_dependency_orchestrator.py ./pocketflow_tools/generators/test_config_integration.py ./framework-tools/test_smart_features.py ./pocketflow_tools/generators/test_generators.py)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(for:*)",
      "Bash(do echo \"=== $project_dir ===\")",
      "Bash(if [ -f \"$project_dir/.agent-os/config.yml\" ])",
      "Bash(then grep -A 2 \"base_installation:\" \"$project_dir/.agent-os/config.yml\")",
      "Bash(ls:*)",
      "Bash(else echo \"No config found\")",
      "Bash(fi)",
      "Bash(do echo \"$dir:\")",
      "Bash(du:*)",
      "Bash(git log:*)"
    ],
    "deny": [],
    "ask": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "/private/tmp/test-output/testworkflow",
      "/private/tmp/test-fixes",
      "/private/tmp/test-project/.agent-os",
      "/Users/jeffkiefer/.agent-os/agents"
    ]
  }
}